


ARM Macro Assembler    Page 1 


    1 00000000                 thumb
    2 00000000                 AREA             dft, code, READONLY
    3 00000000                 import           TabSin
    4 00000000                 import           TabCos
    5 00000000                 import           TabSig2
    6 00000000                 export           m2
    7 00000000         
    8 00000000         ; r0 contient k
    9 00000000         ; r1 cotient TabCos
   10 00000000         ; r2 contient adresse du signal
   11 00000000         ; r3 contient x(i) 
   12 00000000         ; r4 contient cos(i*k)
   13 00000000         ; r5 contient i*k
   14 00000000         ; r6 la somme des x(i)cos(ik)
   15 00000000         ; r7 contient x(i)cos(ik)
   16 00000000         ; r12 contient i
   17 00000000         
   18 00000000         
   19 00000000 00000040 
                       N       EQU              64
   20 00000000         
   21 00000000         calculdft
                               proc
   22 00000000 B4F0            push             {r4,r5,r6, r7}
   23 00000002         
   24 00000002 F04F 0C00       mov              r12, #0x00  ; on initialise i à
                                                             0
   25 00000006 4919            ldr              r1, =TabCos ; adresse de TabCos
                                                             
   26 00000008 4A19            ldr              r2, =TabSig2 
                                                            ; adresse de TabSig
                                                            
   27 0000000A         
   28 0000000A         
   29 0000000A F04F 0300       mov              r3,#0
   30 0000000E F04F 0600       mov              r6,#0
   31 00000012         
   32 00000012         
   33 00000012         
   34 00000012         loop
   35 00000012 FB0C F500       mul              r5,r12,r0   ; i * k
   36 00000016 F005 053F       and              r5,r5, #63  ; modulo 64
   37 0000001A         ;r5 contient desormais i*k mod 64
   38 0000001A         
   39 0000001A F931 4015       ldrsh            r4, [r1, r5, lsl #0x01] 
                                                            ; cos(ik)
   40 0000001E F932 301C       ldrsh            r3, [r2,r12, lsl #0x01] ; x(i)
   41 00000022         
   42 00000022 FB03 F704       mul              r7,r3,r4    ; r7 contient desor
                                                            mais x(i)*cos(ik)
   43 00000026         
   44 00000026 443E            add              r6,r7       ; on l'ajoute à la 
                                                            somme
   45 00000028         
   46 00000028 F10C 0C01       add              r12, #0x01  ; on incremente i
   47 0000002C         
   48 0000002C F1BC 0F40       cmp              r12,#N      ; comparaison entre
                                                             i et N (64)
   49 00000030         



ARM Macro Assembler    Page 2 


   50 00000030 D1EF            bne              loop        ; i/=N : on continu
                                                            e la boucle
   51 00000032 D0FF            beq              end_loop    ; i=N : on sort
   52 00000034         
   53 00000034         end_loop
   54 00000034 4630            mov              r0, r6
   55 00000036 BCF0            pop              {r4,r5,r6, r7}
   56 00000038 4770            bx               lr
   57 0000003A         
   58 0000003A                 endp
   59 0000003A         
   60 0000003A         
   61 0000003A         
   62 0000003A         
   63 0000003A         
   64 0000003A         
   65 0000003A         
   66 0000003A         
   67 0000003A         m2      proc
   68 0000003A B500            push             {lr}
   69 0000003C B470            push             {r4,r5,r6}
   70 0000003E 4A0B            ldr              r2,=TabCos
   71 00000040 B403            push             {r0, r1}
   72 00000042 F7FF FFFE       bl               calculdft
   73 00000046         ;desormais r0 contient le retour de calculdft
   74 00000046 FB80 5400       smull            r5,r4,r0,r0 ;on met dans r4, r5
                                                             le carré de la par
                                                            tie réelle 
   75 0000004A BC03            pop{r0,          r1}
   76 0000004C         
   77 0000004C         
   78 0000004C 4A09            ldr              r2,=TabSin
   79 0000004E B410            push             {r4}
   80 00000050 F7FF FFFE       bl               calculdft
   81 00000054         ;desormais r0 contient le retour de calculdft
   82 00000054 F04F 0600       mov              r6, #0x0
   83 00000058 FB80 6300       smull            r6,r3,r0,r0 ; 
   84 0000005C EB03 0004       add              r0, r3, r4  ; somme des carré d
                                                            es parties réelles 
                                                            et imaginaires  
   85 00000060 BC10            pop              {r4}
   86 00000062 BC70            pop              {r4, r5,r6}
   87 00000064 F85D EB04       pop              {lr}
   88 00000068 4770            bx               lr
   89 0000006A                 endp
   90 0000006A         
   91 0000006A         
   92 0000006A                 end
              00 00 00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\obj\dft.d -o.\obj\dft.o -I.\RTE\_Simu -IC:\Users\HP\AppData\Loca
l\Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\Core\Include -IC:\Users\HP\AppData\Local\Arm\
Packs\Keil\STM32F1xx_DFP\2.3.0\Device\Include --predefine="__EVAL SETA 1" --pre
define="__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 529" --predefine
="_RTE_ SETA 1" --predefine="STM32F10X_MD SETA 1" --list=dft.lst dft.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

calculdft 00000000

Symbol: calculdft
   Definitions
      At line 21 in file dft.s
   Uses
      At line 72 in file dft.s
      At line 80 in file dft.s

dft 00000000

Symbol: dft
   Definitions
      At line 2 in file dft.s
   Uses
      None
Comment: dft unused
end_loop 00000034

Symbol: end_loop
   Definitions
      At line 53 in file dft.s
   Uses
      At line 51 in file dft.s
Comment: end_loop used once
loop 00000012

Symbol: loop
   Definitions
      At line 34 in file dft.s
   Uses
      At line 50 in file dft.s
Comment: loop used once
m2 0000003A

Symbol: m2
   Definitions
      At line 67 in file dft.s
   Uses
      At line 6 in file dft.s
Comment: m2 used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

N 00000040

Symbol: N
   Definitions
      At line 19 in file dft.s
   Uses
      At line 48 in file dft.s
Comment: N used once
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TabCos 00000000

Symbol: TabCos
   Definitions
      At line 4 in file dft.s
   Uses
      At line 25 in file dft.s
      At line 70 in file dft.s

TabSig2 00000000

Symbol: TabSig2
   Definitions
      At line 5 in file dft.s
   Uses
      At line 26 in file dft.s
Comment: TabSig2 used once
TabSin 00000000

Symbol: TabSin
   Definitions
      At line 3 in file dft.s
   Uses
      At line 78 in file dft.s
Comment: TabSin used once
3 symbols
346 symbols in table
